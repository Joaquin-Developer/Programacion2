0a1,17
> ==958442== Invalid read of size 4
> ==958442==    at 0x10CDA3: imprimirTJugador(rep_jugador*) (jugador.cpp:32)
> ==958442==    by 0x10B43C: main_imprimirJugadorListaJugadores(rep_jugadoresLDE*&) (principal.cpp:755)
> ==958442==    by 0x109BDC: main (principal.cpp:297)
> ==958442==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
> ==958442== 
> ==958442== 
> ==958442== Process terminating with default action of signal 11 (SIGSEGV)
> ==958442==  Access not within mapped region at address 0x4
> ==958442==    at 0x10CDA3: imprimirTJugador(rep_jugador*) (jugador.cpp:32)
> ==958442==    by 0x10B43C: main_imprimirJugadorListaJugadores(rep_jugadoresLDE*&) (principal.cpp:755)
> ==958442==    by 0x109BDC: main (principal.cpp:297)
> ==958442==  If you believe this happened as a result of a stack
> ==958442==  overflow in your program's main thread (unlikely but
> ==958442==  possible), you can try to increase the size of the
> ==958442==  main thread stack using the --main-stacksize= flag.
> ==958442==  The main thread stack size used in this run was 8388608.
2,3c19,20
< 3>4>5>6>7>8>9>10>11>12>13>14>15>16>17>18>19>20>21>22>23>24>25>26>27>28>29>30>31>32>33>34>35>La jugador con id 1 está en la lista.
< 36>La jugador con id 5 está en la lista.
---
> 3>4>5>6>7>8>9>10>11>12>13>14>15>16>17>18>19>20>21>22>23>24>25>26>27>28>29>30>31>32>33>34>35>La jugador con id 1 NO está en la lista.
> 36>La jugador con id 5 NO está en la lista.
6,16c23,37
< 39>Jugador 1:  Juan, Uruguay, 21 años
< Jugada: 1 
< Movimientos: Derecha Izquierda Arriba Abajo 
< 40>Jugador 8:  Andres, Argentina, 21 años
< Jugada: 2 
< Movimientos: Izquierda Izquierda Izquierda Izquierda 
< Jugada: 3 
< Movimientos: Izquierda Arriba Abajo Abajo 
< Jugada: 4 
< Movimientos: Arriba Arriba Izquierda Izquierda 
< 41>42>Fin.
---
> 39>==958442== 48 bytes in 4 blocks are definitely lost in loss record 2 of 5
> ==958442==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==958442==    by 0x10C1D8: crearTFecha(unsigned int, unsigned int, unsigned int) (fecha.cpp:12)
> ==958442==    by 0x10A0E2: leerFecha(rep_fecha*&) (principal.cpp:394)
> ==958442==    by 0x10A146: main_crearFecha(rep_fecha*&) (principal.cpp:400)
> ==958442==    by 0x109459: main (principal.cpp:151)
> ==958442== 
> ==958442== 1,224 (864 direct, 360 indirect) bytes in 4 blocks are definitely lost in loss record 5 of 5
> ==958442==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==958442==    by 0x10CCE8: crearTJugador(unsigned int, unsigned int, char const*, char const*, rep_partida*) (jugador.cpp:14)
> ==958442==    by 0x10ABFF: main_crearJugador(rep_jugador*&, rep_partida*&) (principal.cpp:621)
> ==958442==    by 0x109885: main (principal.cpp:237)
> ==958442== 
> timeout: la orden monitorizada ha volcado un 'core'
> Segmentation fault
