0a1,17
> ==59264== Invalid read of size 4
> ==59264==    at 0x10A5CC: infoATexto(_rep_info*) (info.cpp:49)
> ==59264==    by 0x10A74D: imprimirInfo(_rep_info*) (info.cpp:76)
> ==59264==    by 0x10991D: main (principal.cpp:154)
> ==59264==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
> ==59264== 
> ==59264== 
> ==59264== Process terminating with default action of signal 11 (SIGSEGV)
> ==59264==  Access not within mapped region at address 0x0
> ==59264==    at 0x10A5CC: infoATexto(_rep_info*) (info.cpp:49)
> ==59264==    by 0x10A74D: imprimirInfo(_rep_info*) (info.cpp:76)
> ==59264==    by 0x10991D: main (principal.cpp:154)
> ==59264==  If you believe this happened as a result of a stack
> ==59264==  overflow in your program's main thread (unlikely but
> ==59264==  possible), you can try to increase the size of the
> ==59264==  main thread stack using the --main-stacksize= flag.
> ==59264==  The main thread stack size used in this run was 8388608.
13,14c30,31
< 13>(1,1.00)(6,6.00)(4,4.00)(7,7.00)(3,3.00)(8,8.00)(2,2.00)(0,0.00)(1,11.10)(5,5.00)
< 14>La cantidad es 10.
---
> 13>(5,5.00)(1,1.00)
> 14>La cantidad es 2.
16,18c33,39
< 16>El elemento es (0,0.00)
< 17>El elemento es (6,6.00)
< 18>Fin.
---
> 16>El elemento es ==59264== 320 (192 direct, 128 indirect) bytes in 8 blocks are definitely lost in loss record 5 of 5
> ==59264==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==59264==    by 0x109F3D: insertarAlInicio(unsigned int, double, _rep_cadena*) (cadena.cpp:67)
> ==59264==    by 0x109846: main (principal.cpp:141)
> ==59264== 
> timeout: la orden monitorizada ha volcado un 'core'
> Segmentation fault
